package vista;

import com.formdev.flatlaf.FlatLightLaf;
import dao.daoServicios;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Servicios;
import util.MySQLConexion;

/**
 *
 * @author Nelson
 */
public class adminServicios3 extends javax.swing.JPanel {
       DefaultTableModel model = new DefaultTableModel();
     TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        daoServicios daos=new daoServicios();

    
    int         caracter=100;

    public adminServicios3() {
        FlatLightLaf.setup();
        initComponents();
        txtser.setText("");
        txtdesayuda.setText("");
        tabla.setModel(model);
        model.addColumn("ID");
        model.addColumn("SERVICIO");
        model.addColumn("DESCRIPCION");       
        daos.iniciartabla(model);
        actualizarTabla();
        int id=daos.verid();
        txtID.setText(String.valueOf(id));
        txtcaracter.setText(Integer.toString(caracter));
             jButton2.setEnabled(false);
             jButton3.setEnabled(false);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtser = new javax.swing.JLabel();
        txtdesayuda = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtServicio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtdes = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtbusqueda = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtcaracter = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("REGISTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, -1));

        txtser.setForeground(new java.awt.Color(255, 0, 0));
        txtser.setText("SERVICIO");
        add(txtser, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 140, 20));

        txtdesayuda.setText("CARACTER");
        add(txtdesayuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 170, 20));

        jLabel2.setText("NOMBRE SERVICIO");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 110, 20));

        jLabel3.setText("DESCRIPCION");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 90, 20));

        txtID.setEditable(false);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, -1, -1));

        txtServicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtServicioKeyReleased(evt);
            }
        });
        add(txtServicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 140, -1));

        jLabel4.setText("ID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 20, 20));

        txtdes.setColumns(20);
        txtdes.setLineWrap(true);
        txtdes.setRows(5);
        txtdes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtdesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtdes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 260, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("CRUD Servicios");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 400, 40));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "SERVICIO", "DESCRIPCION"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMaxWidth(50);
            tabla.getColumnModel().getColumn(1).setMinWidth(150);
            tabla.getColumnModel().getColumn(1).setMaxWidth(500);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 570, -1));

        jLabel5.setText("BUSQUEDA:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, -1, -1));

        txtbusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbusquedaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbusquedaKeyTyped(evt);
            }
        });
        add(txtbusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 410, 30));

        jButton2.setText("EDITAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, -1, -1));

        jButton3.setText("ELIMINAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, -1));

        jButton4.setText("NUEVO");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, -1, -1));

        jLabel6.setText("CARACTER MAXIMO");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        txtcaracter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcaracterFocusLost(evt);
            }
        });
        txtcaracter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcaracterActionPerformed(evt);
            }
        });
        txtcaracter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcaracterKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcaracterKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcaracterKeyTyped(evt);
            }
        });
        add(txtcaracter, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String descripcion,servicio;
        servicio=txtServicio.getText();
        descripcion=txtdes.getText();
        if (!servicio.isEmpty() && !descripcion.isEmpty() ){
            if(daos.validarservicio(servicio)==false){
                if(txtdes.getText().length()<=caracter){
                    daoServicios x=new daoServicios();
                    Servicios y=new Servicios(servicio, descripcion);
                    x.CrearServicio(y);
                    limpiar();
                    actualizarTabla();

                    JOptionPane.showMessageDialog(null,"Servicios Registrado");
                }else{
                    JOptionPane.showMessageDialog(null,"Numero caracteres superados");

                }

            }else{
                JOptionPane.showMessageDialog(null,"Servicios ya existe");

            }

        }else{
            JOptionPane.showMessageDialog(null,"Todos los campos deben estar completos");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed

    }//GEN-LAST:event_txtIDActionPerformed

    private void txtServicioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtServicioKeyReleased

        String servicio=txtServicio.getText();
        
        if (daos.validarservicio(servicio)==true) {
            txtser.setText("SERVICIO EXISTENTE");
        }else{
            txtser.setText("");

        }
    }//GEN-LAST:event_txtServicioKeyReleased

    private void txtdesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdesKeyReleased

        int X=txtdes.getText().length();
        if(X<=caracter){
            txtdesayuda.setText("Caracteres restantes:"+(caracter-X));
        }else{
        txtdes.setText(txtdes.getText().substring(0, caracter));

        }
    }//GEN-LAST:event_txtdesKeyReleased

    private void txtbusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedaKeyReleased
        String textoBusqueda = txtbusqueda.getText().toLowerCase();
        System.out.println(""+textoBusqueda);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda));
        tabla.setRowSorter(sorter);

         int rowCount = sorter.getViewRowCount();
        
    }//GEN-LAST:event_txtbusquedaKeyReleased

    private void txtbusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedaKeyPressed

    }//GEN-LAST:event_txtbusquedaKeyPressed

    private void txtbusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedaKeyTyped
        // TODO add your handling code here:}
        

    }//GEN-LAST:event_txtbusquedaKeyTyped

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
           int filaSeleccionada = tabla.getSelectedRow();
                 int filaSeleccionadamodelo = sorter.convertRowIndexToModel(filaSeleccionada);

          int id = Integer.parseInt(model.getValueAt(filaSeleccionadamodelo, 0).toString());
          String servicio = model.getValueAt(filaSeleccionadamodelo, 1).toString(); 
          String des = model.getValueAt(filaSeleccionadamodelo, 2).toString();
                                 txtID.setText(""+id);
                                 txtServicio.setText(""+servicio);
                                 txtdes.setText(""+des);
                             int X=txtdes.getText().length();
             txtdesayuda.setText("Caracteres restantes:"+(caracter-X));
             jButton1.setEnabled(false);
              jButton2.setEnabled(true);
              jButton3.setEnabled(true);

        actualizarTabla();

                                 
    }//GEN-LAST:event_tablaMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        int id=Integer.parseInt(txtID.getText());
        String descripcion,servicio;
        servicio=txtServicio.getText();
        descripcion=txtdes.getText();
        daos.actualizarservicio(id, servicio, descripcion);
        limpiar();

                            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
              int id=Integer.parseInt(txtID.getText());
              daos.eliminarservicio(id);
               limpiar();
         actualizarTabla();

    }//GEN-LAST:event_jButton3ActionPerformed
public void actualizarTabla() {
    // Limpiar el modelo
    model.setRowCount(0);

    // Volver a cargar los datos en el modelo
    daos.iniciartabla(model);

    // Notificar al TableRowSorter sobre los cambios en el modelo
    sorter.modelStructureChanged();

    // Obtener el número de filas en la vista del TableRowSorter
    int rowCount = sorter.getViewRowCount();

    // Imprimir información sobre el rango de filas en la vista
    System.out.println("Rango de filas actual: 0 - " + (rowCount - 1));
    System.out.println("Número total de filas en el modelo: " + model.getRowCount());
    
    // Restablecer el modelo en la tabla (puede que no sea necesario en algunos casos)
    tabla.setModel(model);
}
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        limpiar();
        actualizarTabla();
                                         jButton1.setEnabled(true);
                                         jButton2.setEnabled(false);
                                         jButton3.setEnabled(false);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtdesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdesKeyTyped

   
    }//GEN-LAST:event_txtdesKeyTyped

    private void txtdesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdesKeyPressed
        // TODO add your handling code here:
        

    }//GEN-LAST:event_txtdesKeyPressed

    private void txtcaracterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcaracterKeyPressed
       

    }//GEN-LAST:event_txtcaracterKeyPressed

    private void txtcaracterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcaracterKeyReleased



        
    }//GEN-LAST:event_txtcaracterKeyReleased

    private void txtcaracterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcaracterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcaracterActionPerformed

    private void txtcaracterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcaracterKeyTyped

  

        
    }//GEN-LAST:event_txtcaracterKeyTyped

    private void txtcaracterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcaracterFocusLost
    String caracterTexto = txtcaracter.getText();
    System.out.println("" + caracterTexto);

    try {
    caracter = Integer.parseInt(caracterTexto);

        if (caracter >= 100 && caracter <= 500) {
                caracter = Integer.parseInt(caracterTexto);

            limpiar();
        } else {
            JOptionPane.showMessageDialog(null, "CARACTER NO DEBE SER MENOR A 100 NI MAYOR A 500");
            txtcaracter.setText("100");
            caracter = 100;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "CARACTER DEBE SER NUMERICO");
        txtcaracter.setText("100");
        caracter = 100;
    }
    }//GEN-LAST:event_txtcaracterFocusLost



       private void limpiar(){
              int id=daos.verid();
        txtID.setText(String.valueOf(id));
       txtServicio.setText("");
       txtdes.setText("");
      txtdesayuda.setText("");


    }
 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtServicio;
    private javax.swing.JTextField txtbusqueda;
    private javax.swing.JTextField txtcaracter;
    private javax.swing.JTextArea txtdes;
    private javax.swing.JLabel txtdesayuda;
    private javax.swing.JLabel txtser;
    // End of variables declaration//GEN-END:variables
}
