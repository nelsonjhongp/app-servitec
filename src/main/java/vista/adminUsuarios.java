/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista;

import com.formdev.flatlaf.FlatLightLaf;
import dao.daoServicios;
import dao.daoTrabajador;
import dao.daoUsuario;
import java.awt.Color;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JRadioButton;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.event.RowSorterEvent;
import javax.swing.event.RowSorterListener;
import modelo.Servicios;
import modelo.Trabajador;
import modelo.Usuario;

/**
 *
 * @author Adria
 */
public class adminUsuarios extends javax.swing.JPanel {

    /**
     * Creates new form adminUsuarios
     */
     DefaultTableModel model = new DefaultTableModel();
          DefaultTableModel model1 = new DefaultTableModel();

     TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
     daoUsuario daos=new daoUsuario();
    ButtonGroup tipoCuentaGroup = new ButtonGroup();
    daoServicios daoServ = new daoServicios();
    int validacion;
    int tipo=0;
     daoUsuario daousuUser=new daoUsuario();

    public adminUsuarios() {
        FlatLightLaf.setup();
        initComponents();
        comboServiciosListar();
         funcionbotones();
        btnupdate.setEnabled(false);
        int id=daos.verid();
        txtid.setText(String.valueOf(id));
        tabla.setModel(model);
        model.addColumn("ID");
        model.addColumn("TIPO DE CUENTA");
        model.addColumn("USUARIO");
        model.addColumn("SERVICIO");
        model.addColumn("NOMBRE");
        model.addColumn("APELLIDO");
        model.addColumn("CORREO");
        model.addColumn("CONTRASEÑA");  
        model.addColumn("NUMERO");
        juser.setText("");
        txtnumeroayuda.setText("");
        daos.iniciartabla(model);
        actualizarTabla();
                btndelete.setEnabled(false);
                btnupdate.setEnabled(false);
        cbtipo.addItem("Todo");
        cbtipo.addItem("Cliente");
        cbtipo.addItem("Trabajador");
        cbtipo.addItem("Admin");
    }
        public void comboServiciosListar(){
        List<Servicios> listaServicios = daoServ.obtenerServicios();
        for (Servicios servicio : listaServicios) {
            cmbServicios.addItem(servicio.getNombre_servicio());
        }
    }
    public void funcionbotones(){
        tipoCuentaGroup.add(botoncliente);
        tipoCuentaGroup.add(botonadmin);
        tipoCuentaGroup.add(botontrabajador);
        

                        botontrabajador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // Manejar la selección del JRadioButton "Trabajador"
                if (botontrabajador.isSelected()) {
                    System.out.println("Trabajador seleccionado");
                     jLabel10.setVisible(true);
                    cmbServicios.setVisible(true);
                    tipo=3;
                }
            }
        });
            botoncliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // Manejar la selección del JRadioButton "Cliente"
                if (botoncliente.isSelected()) {
                    System.out.println("Cliente seleccionado");
                    jLabel10.setVisible(false);
                    cmbServicios.setVisible(false);
                    tipo=2;
                }
            }
        });
            botonadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // Manejar la selección del JRadioButton "Cliente"
                if (botonadmin.isSelected()) {
                    System.out.println("Cliente seleccionado");
                    jLabel10.setVisible(false);
                    cmbServicios.setVisible(false);
                    tipo=1;
                }
            }
        });


    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        botoncliente = new javax.swing.JRadioButton();
        botonadmin = new javax.swing.JRadioButton();
        txtid = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtuser = new javax.swing.JTextField();
        txtcorreo = new javax.swing.JTextField();
        txtcontra = new javax.swing.JTextField();
        txtapellido = new javax.swing.JTextField();
        txtnum = new javax.swing.JTextField();
        cmbServicios = new javax.swing.JComboBox<>();
        btnadd = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnnew = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtbusqueda = new javax.swing.JTextField();
        cbtipo = new javax.swing.JComboBox<>();
        juser = new javax.swing.JLabel();
        txtnumeroayuda = new javax.swing.JLabel();
        botontrabajador = new javax.swing.JRadioButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("CRUD Usuarios");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 400, 40));

        jLabel2.setText("ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 95, -1, -1));

        jLabel3.setText("NOMBRE");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 264, -1, -1));

        jLabel4.setText("USUARIO");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 214, -1, -1));

        jLabel5.setText("APELLIDO");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 304, -1, -1));

        jLabel6.setText("CONTRASEÑA");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 344, -1, -1));

        jLabel7.setText("NUMERO");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 415, -1, -1));

        jLabel8.setText("CORREO");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 375, -1, -1));

        botoncliente.setText("CLIENTE");
        add(botoncliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 127, -1, -1));

        botonadmin.setText("ADMIN");
        add(botonadmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 166, -1, -1));

        txtid.setEditable(false);
        add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 92, 107, -1));

        jLabel10.setText("SERVICIO");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 461, -1, -1));
        add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 261, 107, -1));

        txtuser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtuserKeyReleased(evt);
            }
        });
        add(txtuser, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 211, 107, -1));
        add(txtcorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 372, 107, -1));
        add(txtcontra, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 341, 107, -1));
        add(txtapellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 301, 107, -1));

        txtnum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtnumFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtnumFocusLost(evt);
            }
        });
        txtnum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnumKeyReleased(evt);
            }
        });
        add(txtnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 412, 107, -1));

        cmbServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbServiciosActionPerformed(evt);
            }
        });
        add(cmbServicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 458, 107, -1));

        btnadd.setText("AÑADIR");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 521, 99, -1));

        btndelete.setText("ELIMINAR");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 521, 107, -1));

        btnupdate.setText("ACTUALIZAR");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 550, -1, -1));

        btnnew.setText("NUEVO");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        add(btnnew, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 550, 107, -1));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 588, -1));

        jLabel11.setText("BUSQUEDA:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 66, -1, -1));

        txtbusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbusquedaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbusquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbusquedaKeyTyped(evt);
            }
        });
        add(txtbusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 56, 367, 30));

        cbtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbtipoActionPerformed(evt);
            }
        });
        add(cbtipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(831, 60, 93, -1));

        juser.setText("USUARIO");
        add(juser, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 239, 107, -1));

        txtnumeroayuda.setText("NUMERO");
        add(txtnumeroayuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 436, 107, -1));

        botontrabajador.setText("TRABAJADR");
        add(botontrabajador, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 127, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtbusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedaKeyPressed

    }//GEN-LAST:event_txtbusquedaKeyPressed

    private void txtbusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedaKeyReleased
        String textoBusqueda = txtbusqueda.getText().toLowerCase();
        System.out.println(""+textoBusqueda);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda));
        tabla.setRowSorter(sorter);

        int rowCount = sorter.getViewRowCount();

    }//GEN-LAST:event_txtbusquedaKeyReleased

    private void txtbusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbusquedaKeyTyped
        // TODO add your handling code here:}

    }//GEN-LAST:event_txtbusquedaKeyTyped
   public boolean validarletra(String letra){
    return letra.matches("^[a-zA-Z\\s]+$");
    }
   
    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String nombre,apellido,contra,usuario,numero,correo,servicio;
        nombre=txtnombre.getText();
        apellido=txtapellido.getText();
        usuario=txtuser.getText();
        contra=txtcontra.getText();
        correo=txtcorreo.getText();
        servicio=cmbServicios.getSelectedItem().toString();
        numero=txtnum.getText();
        Date fechaCreacion = new Date();
        String numeroString = "51" +numero; 
        
        if(tipo!=0){
                               if (!nombre.isEmpty() && !apellido.isEmpty() && !usuario.isEmpty() &&
                        !contra.isEmpty() && !correo.isEmpty() && 
                        !numero.isEmpty()) {
                        
                            if(validarletra(nombre)==true && validarletra(apellido)==true){
                                                               if(validacion==1){
                                   if(numeroString.length() == 11){
                                       if(esNumeroEntero(numero)){
                                       Usuario y=new Usuario(tipo, nombre, apellido, usuario, contra, correo,numeroString);
                                       daoUsuario x=new daoUsuario();
                                        x.crearUsuario(y); 
                                        
                                       int idservicio= daoServ.idservicio(servicio);

                                      JOptionPane.showMessageDialog(null, "USUARIO REGISTRADO");  
                                      
                                                                              limpiar();
                                        if(tipo==3){
                                                java.sql.Date sqlDate = new java.sql.Date(fechaCreacion.getTime());

                                              Trabajador z=new Trabajador(nombre, idservicio, sqlDate, usuario);
                                               x.crearTrabajador(z);

                                        }   
                                        actualizarTabla();                                     

                                       }else{
                                      JOptionPane.showMessageDialog(null, "NUMERO DEBE SER NUMERS");
  
                                       }
                                   }else{
                                       JOptionPane.showMessageDialog(null, "NUMERO DEBE SER NUEVO DIGITOS");

                                   }
     

                               }   else{
                                JOptionPane.showMessageDialog(null, "USUARIO YA EXISTENTE");
 
                               }
                            }else{
                            }
                    }else{
                   JOptionPane.showMessageDialog(null,"Todos los campos deben estar completos");

                    } 
        }else{
                             JOptionPane.showMessageDialog(null,"SELECCIONE UN TIPO DE CUENTA");
  
        }

    }//GEN-LAST:event_btnaddActionPerformed
    private void limpiar(){
        txtnombre.setText("");
        txtapellido.setText("");
        txtuser.setText("");
        txtcorreo.setText("");
        txtnum.setText("");
        txtnumeroayuda.setText("");
        txtcontra.setText("");
        juser.setText("");
                      int id=daos.verid();
        txtid.setText(String.valueOf(id));

    }
    private boolean esNumeroEntero(String cadena) {
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
        private void validarNumeroEntero() {
        String cadena = txtnum.getText();
        if (esNumeroEntero(cadena)) {
        } else {
       JOptionPane.showMessageDialog(null, "SOLO SE DEBE INGRESAR NUMEROS");
       txtnum.setText("");
        }
    }
      public Vector<String> getNombreColumnas() {
        Vector<String> columnas = new Vector<>();
        // Agrega los nombres de las columnas según la estructura de tu tabla
        columnas.add("ID");          
        columnas.add("TIPO DE CUENTA");
        columnas.add("USUARIO");
        columnas.add("SERVICIO");
        columnas.add("NOMBRE");
       columnas.add("APELLIDO");
        columnas.add("CORREO");
        columnas.add("CONTRASEÑA");  
        columnas.add("NUMERO");
        // Agrega más columnas según sea necesario
        return columnas;
    }
public void actualizarTabla() {
    // Limpiar el modelo
    model.setRowCount(0);

    // Volver a cargar los datos en el modelo
    daos.iniciartabla(model);

    // Notificar al TableRowSorter sobre los cambios en el modelo
    sorter.modelStructureChanged();

    // Obtener el número de filas en la vista del TableRowSorter
    int rowCount = sorter.getViewRowCount();

    // Imprimir información sobre el rango de filas en la vista
    System.out.println("Rango de filas actual: 0 - " + (rowCount - 1));
    System.out.println("Número total de filas en el modelo: " + model.getRowCount());
    
    // Restablecer el modelo en la tabla (puede que no sea necesario en algunos casos)
    tabla.setModel(model);
}


    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed

    int filaSeleccionada = tabla.getSelectedRow();
    int filaSeleccionadaModelo = sorter.convertRowIndexToModel(filaSeleccionada);

        System.out.println("fila"+filaSeleccionadaModelo);
             int id = Integer.parseInt(model.getValueAt(filaSeleccionadaModelo, 0).toString());
             System.out.println("ID ELIMINAR"+id);
             daousuUser.eliminarusuario(id);
            actualizarTabla();
     



    }//GEN-LAST:event_btndeleteActionPerformed

    private void txtuserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtuserKeyReleased
       String nombreuser= txtuser.getText();

        if(nombreuser.equals("")){
                      juser.setText("");

      }else{
        if(daousuUser.usuarioverificar(nombreuser)==true){
            juser.setText("NOMBRE USUARIO YA EXISTE");
            juser.setForeground(Color.RED);
            validacion=2;

        }else{
            juser.setText("NOMBRE USUARIO VALIDO");
            Color verdeOscuro = new Color(0, 128, 0);
            juser.setForeground(verdeOscuro);
            validacion=1;

        }  
      }        // TODO add your handling code here:
    }//GEN-LAST:event_txtuserKeyReleased

    private void txtnumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnumFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumFocusGained

    private void txtnumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumKeyReleased
         int X=txtnum.getText().length();
        if(X==9){
            txtnumeroayuda.setText("NUMERO VALIDO");
            Color verdeOscuro = new Color(0, 128, 0);
            txtnumeroayuda.setForeground(verdeOscuro);

        }else{
            txtnumeroayuda.setForeground(Color.red);
            txtnumeroayuda.setText("NUMERO NO VALIDO");
            txtnumeroayuda.setForeground(Color.RED);

        }        // TODO add your handling code here:
        
                if(X>9){
             txtnum.setText(txtnum.getText().substring(0, 9));
            txtnumeroayuda.setText("NUMERO VALIDO");
            Color verdeOscuro = new Color(0, 128, 0);
            txtnumeroayuda.setForeground(verdeOscuro);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumKeyReleased

    private void txtnumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnumFocusLost
        // TODO add your handling code here:             
        validarNumeroEntero();

    }//GEN-LAST:event_txtnumFocusLost

    private void cmbServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbServiciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbServiciosActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        btnadd.setEnabled(false);
        btndelete.setEnabled(true);
        btnupdate.setEnabled(true);
        int filaSeleccionadaModelo = tabla.getSelectedRow();
     int filaSeleccionada = sorter.convertRowIndexToModel(filaSeleccionadaModelo);
        System.out.println("FILA"+filaSeleccionada);
        int id = Integer.parseInt(model.getValueAt(filaSeleccionada, 0).toString());
        String tipo12 = (model.getValueAt(filaSeleccionada, 1).toString());
        String usuario = (model.getValueAt(filaSeleccionada, 2).toString());
        String nombreServicio = (model.getValueAt(filaSeleccionada, 3).toString());
        String nombre = (model.getValueAt(filaSeleccionada, 4).toString());
        String apellido = (model.getValueAt(filaSeleccionada, 5).toString());
        String correo = (model.getValueAt(filaSeleccionada, 6).toString());
        String password = (model.getValueAt(filaSeleccionada, 7).toString());
        String numero = (model.getValueAt(filaSeleccionada, 8).toString());
        switch(tipo12){
            case "CLIENTE":
               botoncliente.setSelected(true);     
               botonadmin.setSelected(false);
               botontrabajador.setSelected(false); 
                    jLabel10.setVisible(false);
                    cmbServicios.setVisible(false);
               break;
            case "TRABAJADOR":
               botoncliente.setSelected(false);     
               botonadmin.setSelected(false);
               botontrabajador.setSelected(true);   
                    jLabel10.setVisible(true);
                    cmbServicios.setVisible(true);
               break;
            case "ADMIN":
               botoncliente.setSelected(false);     
               botonadmin.setSelected(true);
               botontrabajador.setSelected(false); 
                    jLabel10.setVisible(false);
                    cmbServicios.setVisible(false);
                break;
            
        }
        cmbServicios.setSelectedItem(nombreServicio);
        txtid.setText(""+id);
        txtnombre.setText(""+nombre);
        txtapellido.setText(""+apellido);
        txtuser.setText(""+usuario);
        txtcorreo.setText(""+correo);
        txtnum.setText(""+numero);
        txtcontra.setText(""+password );

    }//GEN-LAST:event_tablaMouseClicked

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        btnadd.setEnabled(true);
        btndelete.setEnabled(false);
        btnupdate.setEnabled(false);  
        limpiar();
    }//GEN-LAST:event_btnnewActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        int id=Integer.parseInt(txtid.getText());
 
        String nombre,apellido,contra,usuario,numero,correo,servicio;
        nombre=txtnombre.getText();
        apellido=txtapellido.getText();
        usuario=txtuser.getText();
        contra=txtcontra.getText();
        correo=txtcorreo.getText();
        numero=txtnum.getText();
        Date fechaCreacion = new Date();
          java.sql.Date sqlDate = new java.sql.Date(fechaCreacion.getTime());

        String numeroString = "51" +numero; 
       daousuUser.actualizarusuario(id, tipo, nombre, apellido, usuario, contra, correo, numero);

        if(tipo==3){
            daoTrabajador x=new daoTrabajador();
            x.actualizartrabajador(id, nombre, tipo, sqlDate, usuario);
        }else{

        }
    actualizarTabla();
        limpiar();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void cbtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbtipoActionPerformed
  
      String textoBusqueda = "";
         String opcionSeleccionada = (String) cbtipo.getSelectedItem();
                switch (opcionSeleccionada) {
                    case "Todo":
                              textoBusqueda = "";
                        break;

                    case "Cliente":
                        // Acciones para la Opción 2
                        textoBusqueda = "CLIENTE";
                        break;

                    case "Trabajador":
                        textoBusqueda = "TRABAJADOR";
                        break;

                   case "Admin":
                       textoBusqueda = "ADMIN";
                        break;
                }
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoBusqueda));
        tabla.setRowSorter(sorter);

        int rowCount = sorter.getViewRowCount();
    }//GEN-LAST:event_cbtipoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton botonadmin;
    private javax.swing.JRadioButton botoncliente;
    private javax.swing.JRadioButton botontrabajador;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cbtipo;
    private javax.swing.JComboBox<String> cmbServicios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel juser;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtbusqueda;
    private javax.swing.JTextField txtcontra;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtnum;
    private javax.swing.JLabel txtnumeroayuda;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables
}
